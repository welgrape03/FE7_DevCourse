// 01.js - 변수와 상수
// -----------------------------------------------------------
//  변수 (Variable)
// - 데이터를 저장하고 재사용하기 위해 사용하는 이름 붙은 공간
// - var / let / const 키워드로 선언 가능
// -----------------------------------------------------------

// 1. 상수(const) : 변하지 않는 값
// - 선언과 동시에 반드시 초기화(값 할당)를 해야 함
// - 이후 값 변경 불가
const MAX = 99;
console.log(MAX); // 99

// -----------------------------------------------------------
// 2. 변수(let) : 변할 수 있는 값
// - 선언만 해두고 나중에 값 할당 가능
let num2; // 선언
num2 = 10; // 할당
console.log(num2); // 10

// -----------------------------------------------------------
// 3. 표현식과 연산자, 피연산자
// - 연산자(operator) : +, -, = 등 동작을 수행하는 기호
// - 피연산자(operand) : 연산의 대상 (숫자, 변수 등)
// - 표현식(expression) : 값으로 평가될 수 있는 코드 조각
// - 값(value) : 표현식이 실제로 평가된 결과
//
// 예시:
const num = 10 + 20;
// 여기서 10, 20 → 피연산자
//      + → 연산자
//      10 + 20 → 표현식
//      결과 30 → 값
console.log(num); // 30

// -----------------------------------------------------------
// 4. var (옛날 방식, 현재는 거의 사용 안 함)
// - 함수 스코프(function scope)를 가짐
// - 선언과 동시에 undefined로 초기화 (호이스팅 발생)
// - 재선언/재할당 모두 가능 → 예측하기 어려운 버그 발생
// 권장: let(재할당 필요할 때) / const(재할당 필요 없는 경우)

// -----------------------------------------------------------
// ✅ 요약
// - const : 반드시 초기화해야 하며 값 변경 불가 (상수)
// - let   : 값 변경 가능 (일반적인 변수)
// - 표현식은 값으로 평가되는 코드, 연산자/피연산자로 구성됨
// - var는 옛날 방식, 가급적 사용하지 않음
