// 호이스팅
// - 선언과 할당을 구분해서 선언을 최상위로 끌어올리는 현상
// (전역/함수) 실행 컨텍스트
// - 자바스크립트 코드가 실행되는 환경
// -- Record Enviroment
// -- -- 생성 : 변수나 함수와 같은 선언을 메모리에 기록하는 일
// -- -- 실행 : 생성 단계에서 기록된 데이터를 바탕으로 코드를 실행하는 일
// -- Outer Enviroment
// -- -- 자신이 정의가 된 위치의 상위 렉시컬 스코프를 가리킴

// 스코프: 변수에 접근할 수 있는 유효한 범위
// - 함수 스코프 : 함수 안에서만 변수에 접근할 수 있는 유효한 범위
// - 전역 스코프 : 함수 안이든 밖이든 변수에 접근할 수 있는 유효한 범위
// - 블록 스코프 : 블록 범위 안에서 접근할 수 있는 유효한 범위  { }
// 스코프 체인

// 호이스팅
// 함수 내부에서는 외부의 변수(식별자)를 참조 할 수 있다
// 함수 외부에서는 내부의 변수(식별자)를 참조 할 수 없다.
let num = 10;
function a() {
  let n = 20; // 변수 쉐도잉
  console.log(num);
}
console.log(n);
a();
